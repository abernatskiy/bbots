/*************************************************************************
 *                                                                       *
 * Open Dynamics Engine, Copyright (C) 2001,2002 Russell L. Smith.       *
 * All rights reserved.  Email: russ@q12.org   Web: www.q12.org          *
 *                                                                       *
 * This library is free software; you can redistribute it and/or         *
 * modify it under the terms of EITHER:                                  *
 *   (1) The GNU Lesser General Public License as published by the Free  *
 *       Software Foundation; either version 2.1 of the License, or (at  *
 *       your option) any later version. The text of the GNU Lesser      *
 *       General Public License is included with this library in the     *
 *       file LICENSE.TXT.                                               *
 *   (2) The BSD-style license that is included with this library in     *
 *       the file LICENSE-BSD.TXT.                                       *
 *                                                                       *
 * This library is distributed in the hope that it will be useful,       *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the files    *
 * LICENSE.TXT and LICENSE-BSD.TXT for more details.                     *
 *                                                                       *
 *************************************************************************/

/*

buggy with suspension.
this also shows you how to use geom groups.

*/


#include <ode/ode.h>
#include <drawstuff/drawstuff.h>
#include "texturepath.h"

#ifdef _MSC_VER
#pragma warning(disable:4244 4305)  // for VC++, no precision loss complaints
#endif

// select correct drawing functions

#ifdef dDOUBLE
#define dsDrawBox dsDrawBoxD
#define dsDrawSphere dsDrawSphereD
#define dsDrawCylinder dsDrawCylinderD
#define dsDrawCapsule dsDrawCapsuleD
#endif


// some constants

#define LENGTH 1.0	// chassis length
#define WIDTH 1.0	// chassis width
#define HEIGHT 0.1	// chassis height
#define RADIUS 0.1	// leg radius
/*
#define STARTZ 0.5	// starting height of chassis
#define CMASS 1		// chassis mass
#define WMASS 0.2	// wheel mass
*/

// dynamics and collision objects (chassis, 3 wheels, environment)

static dWorldID world;
static dSpaceID space;
static dJointGroupID contactgroup;
static dBodyID body[254];
static dGeomID geom[254];
static dGeomID ground;

/*

static dGeomID ground;
static dSpaceID car_space;
static dGeomID box[1];
static dGeomID sphere[3];
static dGeomID ground_box;
*/

// things that the user controls

static dReal speed=0,steer=0;	// user commands



// this is called by dSpaceCollide when two objects in space are
// potentially colliding.

void CreateBox(	int index, 
				double x, double y, double z,
				double length, double width, double height) {

	dMass m;

	body[index] = dBodyCreate (world);
	dBodySetPosition (body[index],x,y,z);
	dMassSetBox (&m,1,length,width,height);
	dMassAdjust (&m,1);
	dBodySetMass (body[index],&m);
	geom[index] = dCreateBox(space,length,width,height);
	dGeomSetBody (geom[index],body[index]);
}

void CreateCylinder(	int index, 
						double x, double y, double z,
						double r1, double r2, double r3,
						double radius, double length) {

	dMass m;

	body[index] = dBodyCreate (world);
	dBodySetPosition (body[index],x,y,z);

	dMatrix3 R;
	dRFromZAxis(R,r1,r2,r3);
    dBodySetRotation(body[index],R);

	dMassSetSphere (&m,1,radius);
	dMassAdjust (&m,1);
	dBodySetMass (body[index],&m);
	geom[index] = dCreateCylinder(space,radius,length);
	dGeomSetBody (geom[index],body[index]);
}

void DeleteObject( int index ) {

	dGeomDestroy(geom[index]);
	dBodyDestroy(body[index]);
}

void DrawBox(int index) {

  dsSetColor (1,1,1);
  dsSetTexture (DS_WOOD);
  dReal sides[3] = {LENGTH,WIDTH,HEIGHT};
  dsDrawBox (dBodyGetPosition(body[index]),dBodyGetRotation(body[index]),sides);
}

void DrawCylinder(int index) {

  dsSetColor (1,1,1);
  dsSetTexture (DS_WOOD);
  dsDrawCylinder (dBodyGetPosition(body[index]),dBodyGetRotation(body[index]),LENGTH,RADIUS);
}

static void nearCallback (void *data, dGeomID o1, dGeomID o2)
{
  int i,n;

  // only collide things with the ground
  int g1 = (o1 == ground );
  int g2 = (o2 == ground );
  if (!(g1 ^ g2)) return;

  const int N = 10;
  dContact contact[N];
  n = dCollide (o1,o2,N,&contact[0].geom,sizeof(dContact));
  if (n > 0) {
    for (i=0; i<n; i++) {
      contact[i].surface.mode = dContactSlip1 | dContactSlip2 |
	dContactSoftERP | dContactSoftCFM | dContactApprox1;
      contact[i].surface.mu = dInfinity;
      contact[i].surface.slip1 = 0.1;
      contact[i].surface.slip2 = 0.1;
      contact[i].surface.soft_erp = 0.5;
      contact[i].surface.soft_cfm = 0.3;
      dJointID c = dJointCreateContact (world,contactgroup,&contact[i]);
      dJointAttach (c,
		    dGeomGetBody(contact[i].geom.g1),
		    dGeomGetBody(contact[i].geom.g2));
    }
  }
}


// start simulation - set viewpoint

static void start()
{
  dAllocateODEDataForThread(dAllocateMaskAll);

  static float xyz[3] = {0.8317f,-0.9817f,0.8000f};
  static float hpr[3] = {121.0000f,-27.5000f,0.0000f};
  dsSetViewpoint (xyz,hpr);
  printf ("Press:\t'a' to increase speed.\n"
	  "\t'z' to decrease speed.\n"
	  "\t',' to steer left.\n"
	  "\t'.' to steer right.\n"
	  "\t' ' to reset speed and steering.\n"
	  "\t'1' to save the current state to 'state.dif'.\n");
}


// called when a key pressed

static void command (int cmd)
{
  switch (cmd) {
  case 'a': case 'A':
    speed += 0.3;
    break;
  case 'z': case 'Z':
    speed -= 0.3;
    break;
  case ',':
    steer -= 0.5;
    break;
  case '.':
    steer += 0.5;
    break;
  case ' ':
    speed = 0;
    steer = 0;
    break;
  case '1': {
      FILE *f = fopen ("state.dif","wt");
      if (f) {
        dWorldExportDIF (world,f,"");
        fclose (f);
      }
    }
  }
}


// simulation loop

static void simLoop (int pause)
{
	if ( !pause ) {

		for (int i=0;i<1;i++) {

	    		dSpaceCollide (space,0,&nearCallback);
			dWorldStep (world,0.05);
			dJointGroupEmpty(contactgroup);
		}
	}
/*
	DrawBox(0);
	DrawCylinder(1);
	DrawCylinder(2);
	DrawCylinder(3);
	DrawCylinder(4);
	DrawCylinder(5);
	DrawCylinder(6);
	DrawCylinder(7);
	DrawCylinder(8);
*/

	for (int i=0;i<254;i++) {

        	DrawCylinder(i);
	}
}


int main (int argc, char **argv)
{

  // setup pointers to drawstuff callback functions
  dsFunctions fn;
  fn.version = DS_VERSION;
  fn.start = &start;
  fn.step = &simLoop;
  fn.command = &command;
  fn.stop = 0;
  fn.path_to_textures = DRAWSTUFF_TEXTURE_PATH;

  dInitODE2(0);
  world = dWorldCreate();
  space = dHashSpaceCreate (0);
  contactgroup = dJointGroupCreate (0);
  dWorldSetGravity (world,0,0,-0.5);
  ground = dCreatePlane (space,0,0,1,0);


  CreateBox(     0, 0,0,1,                1,1,0.1);

/*
  CreateCylinder(1, +0.5+0.5,0,1, +1,0,0, 0.1,1);
  CreateCylinder(2, -0.5-0.5,0,1, -1,0,0, 0.1,1);
  CreateCylinder(3, 0,+0.5+0.5,1, 0,+1,0, 0.1,1);
  CreateCylinder(4, 0,-0.5-0.5,1, 0,+1,0, 0.1,1);

  CreateCylinder(5, +0.5+1.0,0,0.5, 0,0,1, 0.1,1);
  CreateCylinder(6, -0.5-1.0,0,0.5, 0,0,1, 0.1,1);

  CreateCylinder(7, 0,+0.5+1.0,0.5, 0,0,1, 0.1,1);
  CreateCylinder(8, 0,-0.5-1.0,0.5, 0,0,1, 0.1,1);
*/

CreateCylinder(0,-0.353553156047,0,0.35355362514,-0.707106312094,0,0.707107250279,0.1,1.0);
CreateCylinder(1,-1.20095038899,0,0.785325072506,-0.987688153794,0,0.156435644454,0.1,1.0);
CreateCylinder(2,-2.16523512452,0,0.694174696108,-0.940881317265,0,-0.338736397251,0.1,1.0);
CreateCylinder(3,-3.00230412206,0,0.184830526107,-0.733256677807,0,-0.679951942751,0.1,1.0);
CreateCylinder(4,-3.60925948603,0,-0.593600598073,-0.480654050141,0,-0.876910305609,0.1,1.0);
CreateCylinder(5,-3.97039961394,0,-1.51724045198,-0.24162620568,0,-0.970369402201,0.1,1.0);
CreateCylinder(6,-4.11028514986,0,-2.50206126296,-0.0381448661618,0,-0.999272219761,0.1,1.0);
CreateCylinder(7,-4.30866334049,0,-2.45266422985,-0.43490124741,0,-0.900478153539,0.1,1.0);
CreateCylinder(8,-4.19359737846,0,-1.394900791,-0.688021734712,0,-0.725690080244,0.1,1.0);
CreateCylinder(9,-4.80017510306,0,-2.18325569643,-0.525133714491,0,-0.85101973062,0.1,1.0);
CreateCylinder(10,-4.94853209447,0,-2.04259946126,-0.821847697322,0,-0.569707260271,0.1,1.0);
CreateCylinder(11,-3.82424579528,0,-0.36176046794,-0.910626668634,0,-0.413230045342,0.1,1.0);
CreateCylinder(12,-4.66728776698,0,-0.884075512393,-0.775457274765,0,-0.631400043565,0.1,1.0);
CreateCylinder(13,-5.3700158386,0,-1.58807355944,-0.62999886849,0,-0.776596050532,0.1,1.0);
CreateCylinder(14,-5.49909657622,0,-1.42954237459,-0.888160343735,0,-0.45953368083,0.1,1.0);
CreateCylinder(15,-4.77246616636,0,-0.652296007183,-0.985814073542,0,-0.167841033145,0.1,1.0);
CreateCylinder(16,-5.73071368305,0,-0.919132454576,-0.93068095984,0,-0.365831861641,0.1,1.0);
CreateCylinder(17,-5.76502638953,0,-0.717596821077,-0.999306372785,0,0.037239405357,0.1,1.0);
CreateCylinder(18,-3.13487652206,0,0.553066403216,-0.998401477819,0,0.0565198114678,0.1,1.0);
CreateCylinder(19,-4.11660401095,0,0.45029984005,-0.965053499963,0,-0.2620529378,0.1,1.0);
CreateCylinder(20,-5.03241591854,0,0.0697458732633,-0.866570315204,0,-0.499054995773,0.1,1.0);
CreateCylinder(21,-5.8388229054,0,-0.51261807174,-0.746243658522,0,-0.665672894232,0.1,1.0);
CreateCylinder(22,-5.94084758472,0,-0.335460124685,-0.950293017166,0,-0.311357000123,0.1,1.0);
CreateCylinder(23,-5.0991155907,0,0.315378502339,-0.999969659534,0,-0.00778973762272,0.1,1.0);
CreateCylinder(24,-6.08772931313,0,0.205456253774,-0.977257785321,0,-0.212054759506,0.1,1.0);
CreateCylinder(25,-6.08932181393,0,0.409885795027,-0.980442786933,0,0.196804322999,0.1,1.0);
CreateCylinder(26,-4.09873365144,0,0.765973103654,-0.929312780942,0,0.369293589408,0.1,1.0);
CreateCylinder(27,-5.0597409088,0,1.01091763414,-0.992701733775,0,0.120595471558,0.1,1.0);
CreateCylinder(28,-6.05428671769,0,1.02876775794,-0.996389884006,0,-0.0848952239567,0.1,1.0);
CreateCylinder(29,-6.02963269275,0,1.23171147538,-0.947081834122,0,0.320992210929,0.1,1.0);
CreateCylinder(30,-4.96574554453,0,1.2474532683,-0.804711005239,0,0.593666739886,0.1,1.0);
CreateCylinder(31,-5.82264214665,0,1.7525950367,-0.909082198997,0,0.416616796908,0.1,1.0);
CreateCylinder(32,-5.70127544504,0,1.9171067297,-0.66634879577,0,0.745640182914,0.1,1.0);
CreateCylinder(33,-2.08987173625,0,1.16999672559,-0.790154540718,0,0.61290766171,0.1,1.0);
CreateCylinder(34,-2.96844960919,0,1.60383645558,-0.96700120517,0,0.254771798282,0.1,1.0);
CreateCylinder(35,-3.95092377377,0,1.69920073027,-0.997947123985,0,-0.0640432489039,0.1,1.0);
CreateCylinder(36,-4.92428709147,0,1.50920961612,-0.948779511425,0,-0.315938979393,0.1,1.0);
CreateCylinder(37,-5.83075287438,0,1.09962473197,-0.864152054385,0,-0.503230788905,0.1,1.0);
CreateCylinder(38,-5.89534209467,0,1.29358917722,-0.993330494961,0,-0.115301898421,0.1,1.0);
CreateCylinder(39,-4.94058785781,0,1.76321457621,-0.981381044093,0,0.192070940786,0.1,1.0);
CreateCylinder(40,-5.93123859394,0,1.85294256459,-0.999920428175,0,-0.0126149640359,0.1,1.0);
CreateCylinder(41,-5.89197242827,0,2.05357192842,-0.921388096842,0,0.388643763616,0.1,1.0);
CreateCylinder(42,-3.87037036232,0,2.00494589705,-0.836840301079,0,0.547447084648,0.1,1.0);
CreateCylinder(43,-4.76310038476,0,2.43687862183,-0.948619743812,0,0.316418364905,0.1,1.0);
CreateCylinder(44,-5.73404630926,0,2.65298971504,-0.993272105177,0,0.115803821515,0.1,1.0);
CreateCylinder(45,-5.66935908543,0,2.84692149807,-0.863897657533,0,0.503667387577,0.1,1.0);
CreateCylinder(46,-4.62376006147,0,2.64987746933,-0.669939097222,0,0.74241605991,0.1,1.0);
CreateCylinder(47,-5.36251278682,0,3.31597386151,-0.807566353489,0,0.589776724458,0.1,1.0);
CreateCylinder(48,-5.21073640731,0,3.45293335924,-0.504013594466,0,0.863695719912,0.1,1.0);
CreateCylinder(49,-2.72857388177,0,1.91308188858,-0.487249750326,0,0.87326266427,0.1,1.0);
CreateCylinder(50,-3.34137911187,0,2.68691622415,-0.738360709884,0,0.674406006868,0.1,1.0);
CreateCylinder(51,-4.15340849589,0,3.25625009035,-0.88569805814,0,0.464261725545,0.1,1.0);
CreateCylinder(52,-5.07720942186,0,3.62507503808,-0.961903793817,0,0.273388169899,0.1,1.0);
CreateCylinder(53,-4.98229773063,0,3.80614337949,-0.772080411339,0,0.635524852722,0.1,1.0);
CreateCylinder(54,-3.98175363889,0,3.44418317632,-0.542388344145,0,0.840127897487,0.1,1.0);
CreateCylinder(55,-4.60429044413,0,4.21999753493,-0.702685266333,0,0.711500819731,0.1,1.0);
CreateCylinder(56,-4.43253827241,0,4.33088109957,-0.359180922899,0,0.933267948997,0.1,1.0);
CreateCylinder(57,-3.06527207343,0,2.84097420813,-0.186146633006,0,0.982521974828,0.1,1.0);
CreateCylinder(58,-3.37339280526,0,3.7836270532,-0.430094830651,0,0.90278371532,0.1,1.0);
CreateCylinder(59,-3.89122646167,0,4.63291398775,-0.605572482169,0,0.795790153771,0.1,1.0);
CreateCylinder(60,-3.70666520123,0,4.72084074441,-0.236449961274,0,0.971643667099,0.1,1.0);
CreateCylinder(61,-3.12331396942,0,3.83100648539,0.070062841044,0,0.997542579695,0.1,1.0);
CreateCylinder(62,-3.15595767216,0,4.82517668288,-0.135350246533,0,0.99079781528,0.1,1.0);
CreateCylinder(63,-2.95202431278,0,4.81085333385,0.272516472226,0,0.962151117219,0.1,1.0);
CreateCylinder(64,-0.785323479091,0,1.20095143095,-0.156434333994,0,0.987688361351,0.1,1.0);
CreateCylinder(65,-1.16999395276,0,2.08987328859,-0.612906613336,0,0.79015535392,0.1,1.0);
CreateCylinder(66,-1.91307826832,0,2.72857642003,-0.873262017788,0,0.487250908966,0.1,1.0);
CreateCylinder(67,-2.84097014114,0,3.06527584282,-0.982521727849,0,0.186147936611,0.1,1.0);
CreateCylinder(68,-3.83100234139,0,3.12331905237,-0.997542672653,0,-0.0700615175095,0.1,1.0);
CreateCylinder(69,-4.81084941711,0,2.95203069579,-0.962151478791,0,-0.272515195649,0.1,1.0);
CreateCylinder(70,-4.82517249556,0,3.15596407418,-0.990797635697,0,0.135351561119,0.1,1.0);
CreateCylinder(71,-3.7836225774,0,3.37339782536,-0.902783144672,0,0.43009602846,0.1,1.0);
CreateCylinder(72,-4.72083582642,0,3.70667146481,-0.971643353377,0,0.236451250446,0.1,1.0);
CreateCylinder(73,-4.63290882488,0,3.8912326086,-0.7957893503,0,0.605573538019,0.1,1.0);
CreateCylinder(74,-2.68691179082,0,3.34138267686,-0.674405027214,0,0.738361604682,0.1,1.0);
CreateCylinder(75,-3.44417789335,0,3.98175820861,-0.840127177848,0,0.542389458822,0.1,1.0);
CreateCylinder(76,-4.33087521849,0,4.4325440186,-0.933267472437,0,0.359182161154,0.1,1.0);
CreateCylinder(77,-4.21999142598,0,4.60429604319,-0.711499887411,0,0.702686210348,0.1,1.0);
CreateCylinder(78,-3.25624457963,0,4.15341281626,-0.464260550405,0,0.88569867412,0.1,1.0);
CreateCylinder(79,-3.806136769,0,4.98230278059,-0.635523828329,0,0.772081254549,0.1,1.0);
CreateCylinder(80,-3.62506830166,0,5.07721423159,-0.27338689365,0,0.961904156546,0.1,1.0);
CreateCylinder(81,-1.60383251706,0,2.96845173715,-0.254770515269,0,0.967001543199,0.1,1.0);
CreateCylinder(82,-2.00494076186,0,3.87037302246,-0.547445974332,0,0.836841027428,0.1,1.0);
CreateCylinder(83,-2.64987133454,0,4.62376357731,-0.742415171038,0,0.669940082256,0.1,1.0);
CreateCylinder(84,-3.45292644566,0,5.21074098864,-0.863695051188,0,0.504014740412,0.1,1.0);
CreateCylinder(85,-3.31596674655,0,5.36251718643,-0.589775652982,0,0.807567136001,0.1,1.0);
CreateCylinder(86,-2.43687230217,0,4.76310361799,-0.316417106281,0,0.948620163634,0.1,1.0);
CreateCylinder(87,-2.84691397599,0,5.66936286271,-0.503666241362,0,0.863898325796,0.1,1.0);
CreateCylinder(88,-2.65298210713,0,5.73404982922,-0.115802503647,0,0.993272258824,0.1,1.0);
CreateCylinder(89,-1.69919548821,0,3.95092602826,0.064044572975,0,0.997947039012,0.1,1.0);
CreateCylinder(90,-1.76320802107,0,4.94059019723,-0.192069638695,0,0.981381298931,0.1,1.0);
CreateCylinder(91,-2.05356411097,0,5.89197515294,-0.388642541123,0,0.921388612492,0.1,1.0);
CreateCylinder(92,-1.85293469505,0,5.93124105241,0.0126162907252,0,0.999920411437,0.1,1.0);
CreateCylinder(93,-1.5092030826,0,4.92428909388,0.315940238229,0,0.948779092238,0.1,1.0);
CreateCylinder(94,-1.29358135531,0,5.89534381099,0.115303216367,0,0.993330341979,0.1,1.0);
CreateCylinder(95,-1.09961699576,0,5.83075433335,0.503231935457,0,0.8641513867,0.1,1.0);
CreateCylinder(96,-0.694171823284,0,2.16523604555,0.338737645607,0,0.94088086783,0.1,1.0);
CreateCylinder(97,-0.553062243878,0,3.13487725586,-0.0565184867938,0,0.998401552809,0.1,1.0);
CreateCylinder(98,-0.765967665475,0,4.09873466773,-0.3692923564,0,0.929313270918,0.1,1.0);
CreateCylinder(99,-1.24744667977,0,4.96574719964,-0.593665672199,0,0.804711792912,0.1,1.0);
CreateCylinder(100,-1.91709916528,0,5.70127798864,-0.745639298805,0,0.666349785081,0.1,1.0);
CreateCylinder(101,-1.75258731125,0,5.82264447198,-0.416615590742,0,0.909082751762,0.1,1.0);
CreateCylinder(102,-1.0109109209,0,5.05974225008,-0.120594154446,0,0.99270189378,0.1,1.0);
CreateCylinder(103,-1.23170347529,0,6.02963432697,-0.320990954345,0,0.947082260011,0.1,1.0);
CreateCylinder(104,-1.02875972514,0,6.05428808265,0.0848965459616,0,0.996389771367,0.1,1.0);
CreateCylinder(105,-0.450294378161,0,4.1166046084,0.262054218228,0,0.965053152271,0.1,1.0);
CreateCylinder(106,-0.315371736858,0,5.09911600914,0.00779106437736,0,0.999969649197,0.1,1.0);
CreateCylinder(107,-0.409877715745,0,6.08932235776,-0.196803022152,0,0.980443048051,0.1,1.0);
CreateCylinder(108,-0.205448176606,0,6.08772958572,0.212056056126,0,0.977257503967,0.1,1.0);
CreateCylinder(109,-0.0697391962794,0,5.03241601107,0.499056145534,0,0.86656965306,0.1,1.0);
CreateCylinder(110,0.335468006971,0,5.94084713963,0.311358260966,0,0.950292604058,0.1,1.0);
CreateCylinder(111,0.512625818659,0,5.83882222526,0.665673884344,0,0.74624277531,0.1,1.0);
CreateCylinder(112,-0.184826542665,0,3.00230436729,0.679952915632,0,0.73325577565,0.1,1.0);
CreateCylinder(113,0.361765541929,0,3.82424531529,0.413231253556,0,0.910626120361,0.1,1.0);
CreateCylinder(114,0.652302339266,0,4.7724653009,0.167842341118,0,0.98581385085,0.1,1.0);
CreateCylinder(115,0.717604470084,0,5.76502543742,-0.0372380794823,0,0.999306422193,0.1,1.0);
CreateCylinder(116,0.919140058057,0,5.73071246355,0.365833096464,0,0.930680474455,0.1,1.0);
CreateCylinder(117,0.884081704926,0,4.66728659398,0.631401072437,0,0.775456437026,0.1,1.0);
CreateCylinder(118,1.42954967076,0,5.49909467951,0.459534859236,0,0.888159734027,0.1,1.0);
CreateCylinder(119,1.58808068435,0,5.37001373155,0.77659688641,0,0.629997838106,0.1,1.0);
CreateCylinder(120,0.593605386819,0,3.60925869844,0.876910943337,0,0.480652886661,0.1,1.0);
CreateCylinder(121,1.39490635504,0,4.19359552771,0.725690993107,0,0.68802077187,0.1,1.0);
CreateCylinder(122,2.04260602694,0,4.94852938436,0.569708350694,0,0.821846941437,0.1,1.0);
CreateCylinder(123,2.18326206528,0,4.80017220632,0.851020427364,0,0.525132585362,0.1,1.0);
CreateCylinder(124,1.51724571988,0,3.97039760087,0.970369722789,0,0.241624918199,0.1,1.0);
CreateCylinder(125,2.45266994656,0,4.3086600863,0.900478730563,0,0.434900052659,0.1,1.0);
CreateCylinder(126,2.50206671646,0,4.11028183014,0.99927227037,0,0.0381435403325,0.1,1.0);
CreateCylinder(127,0.353553156047,0,0.35355362514,0.707106312094,0,0.707107250279,0.1,1.0);
CreateCylinder(128,0.785323479091,0,1.20095143095,0.156434333994,0,0.987688361351,0.1,1.0);
CreateCylinder(129,0.694171823284,0,2.16523604555,-0.338737645607,0,0.94088086783,0.1,1.0);
CreateCylinder(130,0.184826542665,0,3.00230436729,-0.679952915632,0,0.73325577565,0.1,1.0);
CreateCylinder(131,-0.593605386819,0,3.60925869844,-0.876910943337,0,0.480652886661,0.1,1.0);
CreateCylinder(132,-1.51724571988,0,3.97039760087,-0.970369722789,0,0.241624918199,0.1,1.0);
CreateCylinder(133,-2.50206671646,0,4.11028183014,-0.99927227037,0,0.0381435403325,0.1,1.0);
CreateCylinder(134,-2.45266994656,0,4.3086600863,-0.900478730563,0,0.434900052659,0.1,1.0);
CreateCylinder(135,-1.39490635504,0,4.19359552771,-0.725690993107,0,0.68802077187,0.1,1.0);
CreateCylinder(136,-2.18326206528,0,4.80017220632,-0.851020427364,0,0.525132585362,0.1,1.0);
CreateCylinder(137,-2.04260602694,0,4.94852938436,-0.569708350694,0,0.821846941437,0.1,1.0);
CreateCylinder(138,-0.361765541929,0,3.82424531529,-0.413231253556,0,0.910626120361,0.1,1.0);
CreateCylinder(139,-0.884081704926,0,4.66728659398,-0.631401072437,0,0.775456437026,0.1,1.0);
CreateCylinder(140,-1.58808068435,0,5.37001373155,-0.77659688641,0,0.629997838106,0.1,1.0);
CreateCylinder(141,-1.42954967076,0,5.49909467951,-0.459534859236,0,0.888159734027,0.1,1.0);
CreateCylinder(142,-0.652302339266,0,4.7724653009,-0.167842341118,0,0.98581385085,0.1,1.0);
CreateCylinder(143,-0.919140058057,0,5.73071246355,-0.365833096464,0,0.930680474455,0.1,1.0);
CreateCylinder(144,-0.717604470084,0,5.76502543742,0.0372380794823,0,0.999306422193,0.1,1.0);
CreateCylinder(145,0.553062243878,0,3.13487725586,0.0565184867938,0,0.998401552809,0.1,1.0);
CreateCylinder(146,0.450294378161,0,4.1166046084,-0.262054218228,0,0.965053152271,0.1,1.0);
CreateCylinder(147,0.0697391962794,0,5.03241601107,-0.499056145534,0,0.86656965306,0.1,1.0);
CreateCylinder(148,-0.512625818659,0,5.83882222526,-0.665673884344,0,0.74624277531,0.1,1.0);
CreateCylinder(149,-0.335468006971,0,5.94084713963,-0.311358260966,0,0.950292604058,0.1,1.0);
CreateCylinder(150,0.315371736858,0,5.09911600914,-0.00779106437736,0,0.999969649197,0.1,1.0);
CreateCylinder(151,0.205448176606,0,6.08772958572,-0.212056056126,0,0.977257503967,0.1,1.0);
CreateCylinder(152,0.409877715745,0,6.08932235776,0.196803022152,0,0.980443048051,0.1,1.0);
CreateCylinder(153,0.765967665475,0,4.09873466773,0.3692923564,0,0.929313270918,0.1,1.0);
CreateCylinder(154,1.0109109209,0,5.05974225008,0.120594154446,0,0.99270189378,0.1,1.0);
CreateCylinder(155,1.02875972514,0,6.05428808265,-0.0848965459616,0,0.996389771367,0.1,1.0);
CreateCylinder(156,1.23170347529,0,6.02963432697,0.320990954345,0,0.947082260011,0.1,1.0);
CreateCylinder(157,1.24744667977,0,4.96574719964,0.593665672199,0,0.804711792912,0.1,1.0);
CreateCylinder(158,1.75258731125,0,5.82264447198,0.416615590742,0,0.909082751762,0.1,1.0);
CreateCylinder(159,1.91709916528,0,5.70127798864,0.745639298805,0,0.666349785081,0.1,1.0);
CreateCylinder(160,1.16999395276,0,2.08987328859,0.612906613336,0,0.79015535392,0.1,1.0);
CreateCylinder(161,1.60383251706,0,2.96845173715,0.254770515269,0,0.967001543199,0.1,1.0);
CreateCylinder(162,1.69919548821,0,3.95092602826,-0.064044572975,0,0.997947039012,0.1,1.0);
CreateCylinder(163,1.5092030826,0,4.92428909388,-0.315940238229,0,0.948779092238,0.1,1.0);
CreateCylinder(164,1.09961699576,0,5.83075433335,-0.503231935457,0,0.8641513867,0.1,1.0);
CreateCylinder(165,1.29358135531,0,5.89534381099,-0.115303216367,0,0.993330341979,0.1,1.0);
CreateCylinder(166,1.76320802107,0,4.94059019723,0.192069638695,0,0.981381298931,0.1,1.0);
CreateCylinder(167,1.85293469505,0,5.93124105241,-0.0126162907252,0,0.999920411437,0.1,1.0);
CreateCylinder(168,2.05356411097,0,5.89197515294,0.388642541123,0,0.921388612492,0.1,1.0);
CreateCylinder(169,2.00494076186,0,3.87037302246,0.547445974332,0,0.836841027428,0.1,1.0);
CreateCylinder(170,2.43687230217,0,4.76310361799,0.316417106281,0,0.948620163634,0.1,1.0);
CreateCylinder(171,2.65298210713,0,5.73404982922,0.115802503647,0,0.993272258824,0.1,1.0);
CreateCylinder(172,2.84691397599,0,5.66936286271,0.503666241362,0,0.863898325796,0.1,1.0);
CreateCylinder(173,2.64987133454,0,4.62376357731,0.742415171038,0,0.669940082256,0.1,1.0);
CreateCylinder(174,3.31596674655,0,5.36251718643,0.589775652982,0,0.807567136001,0.1,1.0);
CreateCylinder(175,3.45292644566,0,5.21074098864,0.863695051188,0,0.504014740412,0.1,1.0);
CreateCylinder(176,1.91307826832,0,2.72857642003,0.873262017788,0,0.487250908966,0.1,1.0);
CreateCylinder(177,2.68691179082,0,3.34138267686,0.674405027214,0,0.738361604682,0.1,1.0);
CreateCylinder(178,3.25624457963,0,4.15341281626,0.464260550405,0,0.88569867412,0.1,1.0);
CreateCylinder(179,3.62506830166,0,5.07721423159,0.27338689365,0,0.961904156546,0.1,1.0);
CreateCylinder(180,3.806136769,0,4.98230278059,0.635523828329,0,0.772081254549,0.1,1.0);
CreateCylinder(181,3.44417789335,0,3.98175820861,0.840127177848,0,0.542389458822,0.1,1.0);
CreateCylinder(182,4.21999142598,0,4.60429604319,0.711499887411,0,0.702686210348,0.1,1.0);
CreateCylinder(183,4.33087521849,0,4.4325440186,0.933267472437,0,0.359182161154,0.1,1.0);
CreateCylinder(184,2.84097014114,0,3.06527584282,0.982521727849,0,0.186147936611,0.1,1.0);
CreateCylinder(185,3.7836225774,0,3.37339782536,0.902783144672,0,0.43009602846,0.1,1.0);
CreateCylinder(186,4.63290882488,0,3.8912326086,0.7957893503,0,0.605573538019,0.1,1.0);
CreateCylinder(187,4.72083582642,0,3.70667146481,0.971643353377,0,0.236451250446,0.1,1.0);
CreateCylinder(188,3.83100234139,0,3.12331905237,0.997542672653,0,-0.0700615175095,0.1,1.0);
CreateCylinder(189,4.82517249556,0,3.15596407418,0.990797635697,0,0.135351561119,0.1,1.0);
CreateCylinder(190,4.81084941711,0,2.95203069579,0.962151478791,0,-0.272515195649,0.1,1.0);
CreateCylinder(191,1.20095038899,0,0.785325072506,0.987688153794,0,0.156435644454,0.1,1.0);
CreateCylinder(192,2.08987173625,0,1.16999672559,0.790154540718,0,0.61290766171,0.1,1.0);
CreateCylinder(193,2.72857388177,0,1.91308188858,0.487249750326,0,0.87326266427,0.1,1.0);
CreateCylinder(194,3.06527207343,0,2.84097420813,0.186146633006,0,0.982521974828,0.1,1.0);
CreateCylinder(195,3.12331396942,0,3.83100648539,-0.070062841044,0,0.997542579695,0.1,1.0);
CreateCylinder(196,2.95202431278,0,4.81085333385,-0.272516472226,0,0.962151117219,0.1,1.0);
CreateCylinder(197,3.15595767216,0,4.82517668288,0.135350246533,0,0.99079781528,0.1,1.0);
CreateCylinder(198,3.37339280526,0,3.7836270532,0.430094830651,0,0.90278371532,0.1,1.0);
CreateCylinder(199,3.70666520123,0,4.72084074441,0.236449961274,0,0.971643667099,0.1,1.0);
CreateCylinder(200,3.89122646167,0,4.63291398775,0.605572482169,0,0.795790153771,0.1,1.0);
CreateCylinder(201,3.34137911187,0,2.68691622415,0.738360709884,0,0.674406006868,0.1,1.0);
CreateCylinder(202,3.98175363889,0,3.44418317632,0.542388344145,0,0.840127897487,0.1,1.0);
CreateCylinder(203,4.43253827241,0,4.33088109957,0.359180922899,0,0.933267948997,0.1,1.0);
CreateCylinder(204,4.60429044413,0,4.21999753493,0.702685266333,0,0.711500819731,0.1,1.0);
CreateCylinder(205,4.15340849589,0,3.25625009035,0.88569805814,0,0.464261725545,0.1,1.0);
CreateCylinder(206,4.98229773063,0,3.80614337949,0.772080411339,0,0.635524852722,0.1,1.0);
CreateCylinder(207,5.07720942186,0,3.62507503808,0.961903793817,0,0.273388169899,0.1,1.0);
CreateCylinder(208,2.96844960919,0,1.60383645558,0.96700120517,0,0.254771798282,0.1,1.0);
CreateCylinder(209,3.87037036232,0,2.00494589705,0.836840301079,0,0.547447084648,0.1,1.0);
CreateCylinder(210,4.62376006147,0,2.64987746933,0.669939097222,0,0.74241605991,0.1,1.0);
CreateCylinder(211,5.21073640731,0,3.45293335924,0.504013594466,0,0.863695719912,0.1,1.0);
CreateCylinder(212,5.36251278682,0,3.31597386151,0.807566353489,0,0.589776724458,0.1,1.0);
CreateCylinder(213,4.76310038476,0,2.43687862183,0.948619743812,0,0.316418364905,0.1,1.0);
CreateCylinder(214,5.66935908543,0,2.84692149807,0.863897657533,0,0.503667387577,0.1,1.0);
CreateCylinder(215,5.73404630926,0,2.65298971504,0.993272105177,0,0.115803821515,0.1,1.0);
CreateCylinder(216,3.95092377377,0,1.69920073027,0.997947123985,0,-0.0640432489039,0.1,1.0);
CreateCylinder(217,4.94058785781,0,1.76321457621,0.981381044093,0,0.192070940786,0.1,1.0);
CreateCylinder(218,5.89197242827,0,2.05357192842,0.921388096842,0,0.388643763616,0.1,1.0);
CreateCylinder(219,5.93123859394,0,1.85294256459,0.999920428175,0,-0.0126149640359,0.1,1.0);
CreateCylinder(220,4.92428709147,0,1.50920961612,0.948779511425,0,-0.315938979393,0.1,1.0);
CreateCylinder(221,5.89534209467,0,1.29358917722,0.993330494961,0,-0.115301898421,0.1,1.0);
CreateCylinder(222,5.83075287438,0,1.09962473197,0.864152054385,0,-0.503230788905,0.1,1.0);
CreateCylinder(223,2.16523512452,0,0.694174696108,0.940881317265,0,-0.338736397251,0.1,1.0);
CreateCylinder(224,3.13487652206,0,0.553066403216,0.998401477819,0,0.0565198114678,0.1,1.0);
CreateCylinder(225,4.09873365144,0,0.765973103654,0.929312780942,0,0.369293589408,0.1,1.0);
CreateCylinder(226,4.96574554453,0,1.2474532683,0.804711005239,0,0.593666739886,0.1,1.0);
CreateCylinder(227,5.70127544504,0,1.9171067297,0.66634879577,0,0.745640182914,0.1,1.0);
CreateCylinder(228,5.82264214665,0,1.7525950367,0.909082198997,0,0.416616796908,0.1,1.0);
CreateCylinder(229,5.0597409088,0,1.01091763414,0.992701733775,0,0.120595471558,0.1,1.0);
CreateCylinder(230,6.02963269275,0,1.23171147538,0.947081834122,0,0.320992210929,0.1,1.0);
CreateCylinder(231,6.05428671769,0,1.02876775794,0.996389884006,0,-0.0848952239567,0.1,1.0);
CreateCylinder(232,4.11660401095,0,0.45029984005,0.965053499963,0,-0.2620529378,0.1,1.0);
CreateCylinder(233,5.0991155907,0,0.315378502339,0.999969659534,0,-0.00778973762272,0.1,1.0);
CreateCylinder(234,6.08932181393,0,0.409885795027,0.980442786933,0,0.196804322999,0.1,1.0);
CreateCylinder(235,6.08772931313,0,0.205456253774,0.977257785321,0,-0.212054759506,0.1,1.0);
CreateCylinder(236,5.03241591854,0,0.0697458732633,0.866570315204,0,-0.499054995773,0.1,1.0);
CreateCylinder(237,5.94084758472,0,-0.335460124685,0.950293017166,0,-0.311357000123,0.1,1.0);
CreateCylinder(238,5.8388229054,0,-0.51261807174,0.746243658522,0,-0.665672894232,0.1,1.0);
CreateCylinder(239,3.00230412206,0,0.184830526107,0.733256677807,0,-0.679951942751,0.1,1.0);
CreateCylinder(240,3.82424579528,0,-0.36176046794,0.910626668634,0,-0.413230045342,0.1,1.0);
CreateCylinder(241,4.77246616636,0,-0.652296007183,0.985814073542,0,-0.167841033145,0.1,1.0);
CreateCylinder(242,5.76502638953,0,-0.717596821077,0.999306372785,0,0.037239405357,0.1,1.0);
CreateCylinder(243,5.73071368305,0,-0.919132454576,0.93068095984,0,-0.365831861641,0.1,1.0);
CreateCylinder(244,4.66728776698,0,-0.884075512393,0.775457274765,0,-0.631400043565,0.1,1.0);
CreateCylinder(245,5.49909657622,0,-1.42954237459,0.888160343735,0,-0.45953368083,0.1,1.0);
CreateCylinder(246,5.3700158386,0,-1.58807355944,0.62999886849,0,-0.776596050532,0.1,1.0);
CreateCylinder(247,3.60925948603,0,-0.593600598073,0.480654050141,0,-0.876910305609,0.1,1.0);
CreateCylinder(248,4.19359737846,0,-1.394900791,0.688021734712,0,-0.725690080244,0.1,1.0);
CreateCylinder(249,4.94853209447,0,-2.04259946126,0.821847697322,0,-0.569707260271,0.1,1.0);
CreateCylinder(250,4.80017510306,0,-2.18325569643,0.525133714491,0,-0.85101973062,0.1,1.0);
CreateCylinder(251,3.97039961394,0,-1.51724045198,0.24162620568,0,-0.970369402201,0.1,1.0);
CreateCylinder(252,4.30866334049,0,-2.45266422985,0.43490124741,0,-0.900478153539,0.1,1.0);
CreateCylinder(253,4.11028514986,0,-2.50206126296,0.0381448661618,0,-0.999272219761,0.1,1.0);

  dsSimulationLoop (argc,argv,352,288,&fn);

  DeleteObject(0);
  DeleteObject(1);
  DeleteObject(2);
  DeleteObject(3);
  DeleteObject(4);
  DeleteObject(5);

  dJointGroupDestroy (contactgroup);
  dSpaceDestroy (space);
  dWorldDestroy (world);
  dCloseODE();

  return 0;
}
